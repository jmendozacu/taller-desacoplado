version: "3.2"
services:
  web:
    image: biko2/apache-php:${PHP_VERSION}
    ports:
      - "$WEB_PORT:80"
      - "443:443"
      - "2222:22"
    volumes:
      - ./docker/web/vhosts:/etc/apache2/sites-enabled
      - ./docker/web/php7/php.ini:/etc/php/${PHP_VERSION}/apache2/php.ini
      - ./docker/web/php7/xdebug.ini:/etc/php/${PHP_VERSION}/apache2/conf.d/20-xdebug.ini
      - ./:/var/www/html
    working_dir: /var/www/html/web
    networks:
      - drupalnet
  mail:
    # https://hub.docker.com/r/mailhog/mailhog/
    image: mailhog/mailhog
    ports:
     - "1025:1025"
     - "${MAILHOG_PORT}:8025"
    networks:
      - drupalnet
  mysql:
    image: mysql:${MYSQL_VERSION}
    environment:
      MYSQL_ROOT_PASSWORD: root # mysql access root/root
      MYSQL_DATABASE: ${MYSQL_DBNAME} #Customize your database name
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASS}
    volumes:
      - ./mysql:/var/lib/mysql
      - ./docker/mysql/docker_conf.cnf:/etc/mysql/conf.d/docker-cnf.cnf
    ports:
      - "3306:3306"
    networks:
      - drupalnet
#  pma:
#    image: phpmyadmin/phpmyadmin
#    environment:
#     - PMA_ARBITRARY=1
#    restart: always
#    ports:
#     - 8010:80

#  solr:
#    image: solr:5.5-alpine
#    volumes:
#      - ./docker-runtime/solr:/opt/solr/server/solr/mycores
#    entrypoint:
#      - docker-entrypoint.sh
#      - solr-precreate
#      - main
#    ports:
#      - "8003:8983"

  redis:
    image: redis:2.8
    networks:
      - drupalnet
#  memcached:
#    image: memcached:latest
#    ports:
#    - "11211:11211"

#  memcached-admin:
#    image: phynias/phpmemcachedadmin
#    ports:
#      - "8006:80"

#  varnish:
#    image: wodby/drupal-varnish
#    depends_on:
#      - nginx
#    environment:
#      VARNISH_SECRET: secret
#      VARNISH_BACKEND_HOST: nginx
#      VARNISH_BACKEND_PORT: 80
#      VARNISH_MEMORY_SIZE: 256M
#      VARNISH_STORAGE_SIZE: 1024M
#    ports:
#      - "8004:6081" # HTTP Proxy
#      - "8015:6082" # Control terminal
networks:
  drupalnet:
    driver: bridge
    ipam:
      driver: default
      
#secrets:
#  docker.cert:
#    file: ./docker.cert
#  docker.key:
#    file: ./docker.key
